import requests
import pymongo
import bs4

class Cxsecurity:
    def __init__(self):
        self.client = pymongo.MongoClient('mongodb://localhost:27017/')
        self.db = self.client['THT']
        self.col = self.db['cxsecurity']
        self.page = 2

    def Script(self):
        for page_n in range(1, self.page + 1):
            resp = requests.get(
                'https://cxsecurity.com/exploit/' + str(page_n),
                headers={'User-Agent': 'Mozilla/5.0'}
            ).text

            parser = bs4.BeautifulSoup(resp, 'html.parser')
            exploit_links = parser.find_all('td', {'width': '95%'})

            for exploit_link in exploit_links:
                exploit_link = exploit_link.find('a')['href']
                exploit_id = exploit_link.split('-')[-1]
                
                if len(list(self.col.find({'exploit_id': exploit_id}))) == 0:
                    resp = requests.get(
                        exploit_link,
                        headers={'User-Agent': 'Mozilla/5.0'}
                    ).text

                    parser = bs4.BeautifulSoup(resp, 'html.parser')
                    parser = parser.find('div', {'ng-non-bindable': True})

                    title = parser.find('h4').text.strip()
                    
                    parser = parser.find('div', {'class': 'row'})
                    sections = parser.find_all('div', {'class': 'well'})
                    date = sections[0].text
                    author = sections[1].find('b').text.strip()
                    risk = sections[2].find('span').text
                    local = sections[3].find('b').text
                    remote = sections[4].find('b').text
                    cve = sections[5].find('b').text
                    cwe = sections[6].find('b').text.strip()

                    data = {
                        'title': title,
                        'date': date,
                        'author': author,
                        'risk': risk,
                        'local': local,
                        'remote': remote,
                        'cve': cve,
                        'cwe': cwe,
                        'exploit_link': exploit_link,
                        'exploit_id': exploit_id
                    }
                    
                    self.col.insert_one(data)

if __name__ == '__main__':
    
    App = Cxsecurity()
    print("Cxsecurity Exploit Bilgileri Çekiliyor.")
    App.Script()
    print("İşlem Tamamlandı.")