import requests
import pymongo
import json


class ExploitDB:

    def __init__(self):

        self.client = pymongo.MongoClient('mongodb://localhost:27017/')
        self.db = self.client['THT']
        self.col = self.db['exploitdb']
    
    def Scarping(self):

        resp = requests.get(
            'https://www.exploit-db.com/?draw=1&columns[0][data]=date_published&columns[0][name]=date_published&columns[0][searchable]=true&columns[0][orderable]=true&columns[0][search][value]=&columns[0][search][regex]=false&columns[1][data]=download&columns[1][name]=download&columns[1][searchable]=false&columns[1][orderable]=false&columns[1][search][value]=&columns[1][search][regex]=false&columns[2][data]=application_md5&columns[2][name]=application_md5&columns[2][searchable]=true&columns[2][orderable]=false&columns[2][search][value]=&columns[2][search][regex]=false&columns[3][data]=verified&columns[3][name]=verified&columns[3][searchable]=true&columns[3][orderable]=false&columns[3][search][value]=&columns[3][search][regex]=false&columns[4][data]=description&columns[4][name]=description&columns[4][searchable]=true&columns[4][orderable]=false&columns[4][search][value]=&columns[4][search][regex]=false&columns[5][data]=type_id&columns[5][name]=type_id&columns[5][searchable]=true&columns[5][orderable]=false&columns[5][search][value]=&columns[5][search][regex]=false&columns[6][data]=platform_id&columns[6][name]=platform_id&columns[6][searchable]=true&columns[6][orderable]=false&columns[6][search][value]=&columns[6][search][regex]=false&columns[7][data]=author_id&columns[7][name]=author_id&columns[7][searchable]=false&columns[7][orderable]=false&columns[7][search][value]=&columns[7][search][regex]=false&columns[8][data]=code&columns[8][name]=code.code&columns[8][searchable]=true&columns[8][orderable]=true&columns[8][search][value]=&columns[8][search][regex]=false&columns[9][data]=id&columns[9][name]=id&columns[9][searchable]=false&columns[9][orderable]=true&columns[9][search][value]=&columns[9][search][regex]=false&order[0][column]=9&order[0][dir]=desc&start=0&length=30&search[value]=&search[regex]=false&author=&port=&type=&tag=&platform=',
            headers={'User-Agent': 'Mozilla/5.0', 'X-Requested-With': 'XMLHttpRequest', 'Accept': 'application/json, text/javascript, */*; q=0.01'}
        )


        for exploit in resp.json()['data']:
            exploit_id = exploit['id']

            if len(list(self.col.find({'exploit_id': exploit_id}))) == 0:
                data = {
                    'exploit_id': exploit_id,
                    'date': exploit['date_published'],
                    'download_link': 'https://www.exploit-db.com/download/' + exploit_id,
                    'title': exploit['description'][1],
                    'type': exploit['type_id'],
                    'platform': exploit['platform']['platform'],
                    'author': exploit['author_id'][1]
                }

                self.col.insert_one(data)


if __name__ == '__main__':
    
    Script = ExploitDB()
    print("ExploitDB Bilgileri Çekiliyor.")
    Script.Scarping()
    print("İşlem Tamamlandı.")